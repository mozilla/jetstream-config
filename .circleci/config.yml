version: 2.1

jobs:
  validate:
    docker:
    - image: gcr.io/moz-fx-data-experiments/jetstream:latest
    environment:
      BASE_COMMIT: << pipeline.git.base_revision >>
      REVISION_COMMIT: <<pipeline.git.revision>>
    steps:
    - checkout
    - run:
        name: Validate config files
        command: |
          apt-get update && apt-get install -y git
          changed_files=$(git diff --name-only $BASE_COMMIT..$REVISION_COMMIT -- '*.toml')

          echo "Run validation on changed files: "
          echo $changed_files

          jetstream validate_config $changed_files
  rerun:
    docker:
    - image: google/cloud-sdk
    steps:
    - checkout
    - &skip_forked_pr
      run:
        name: Early return if this build is from a forked PR
        command: |
          if [ -n "$CIRCLE_PR_NUMBER" ]; then
            echo "Do not re-run analysis on forked PRs, so marking this step successful"
            circleci step halt
          fi
    - run:
        name: Authorize gcloud CLI
        command: |
          # required for parsing kubectl pod statuses
          apt-get install jq -y

          export GOOGLE_APPLICATION_CREDENTIALS="/tmp/gcp.json"
          echo "$GCLOUD_SERVICE_KEY" > "$GOOGLE_APPLICATION_CREDENTIALS"
          gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
          gcloud config set project $GCLOUD_PROJECT
          gcloud container clusters get-credentials jetstream --zone us-central1-a --project $GCLOUD_PROJECT
    - run:
        name: Rerun jetstream
        timeout: 600    # stop task after 10 minutes
        command: |
          # stop running instances so that they do not interfere
          kubectl delete pod -l app=jetstream

          # start a new instance
          kubectl run jetstream --image=gcr.io/moz-fx-data-experiments/jetstream -l app=jetstream --restart=Never --command -- bin/entrypoint rerun_config_changed
          
          # link to logs
          cur_date=`date -u +%FT%TZ`
          echo "Logs: https://console.cloud.google.com/logs/viewer?project=moz-fx-data-experiments&timestamp=$cur_date&advancedFilter=resource.type%3D%22k8s_container%22%0Aresource.labels.project_id%3D%22moz-fx-data-experiments%22%0Aresource.labels.location%3D%22us-central1-a%22%0Aresource.labels.cluster_name%3D%22jetstream%22%0Aresource.labels.namespace_name%3D%22default%22%0Alabels.k8s-pod%2Fapp%3D%22jetstream%22&scrollTimestamp=$cur_date"

          # wait for pod to finish and check status
          active_pods=`kubectl get pod -l app=jetstream --output json | jq -j '.items | length'`
          failed_pods=0
          completed_pods=0

          while [ $active_pods -ge 0 -a $failed_pods == 0 -a $completed_pods == 0 ]
          do
            echo "Wait for jetstream to finish"
            failed_pods=`kubectl get pod -l app=jetstream --field-selector=status.phase=Failed --output json | jq -j '.items | length'`
            completed_pods=`kubectl get pod -l app=jetstream --field-selector=status.phase=Succeeded --output json | jq -j '.items | length'`
            sleep 10
          done

          # delete pod
          kubectl delete pod -l app=jetstream

          if [ $failed_pods -ge 1 ]; then
            echo "Error when running jetstream. Check the logs for more information."
            exit 1
          elif [ $completed_pods -ge 1 ]; then
            echo "Jetstream successfully completed."
          else
            echo "Jetstream completed in unknown status. Please check the logs."
            exit 1
          fi
    - run:
        name: Export data as JSON
        timeout: 600    # stop task after 10 minutes
        command: |
          # stop running instances so that they do not interfere
          kubectl delete pod -l app=jetstreamexport

          # start a new instance
          kubectl run jetstream --image=gcr.io/moz-fx-data-experiments/jetstream -l app=jetstreamexport --restart=Never --command -- bin/entrypoint export_statistics_to_json
          
          # link to logs
          cur_date=`date -u +%FT%TZ`
          echo "Logs: https://console.cloud.google.com/logs/viewer?project=moz-fx-data-experiments&timestamp=$cur_date&advancedFilter=resource.type%3D%22k8s_container%22%0Aresource.labels.project_id%3D%22moz-fx-data-experiments%22%0Aresource.labels.location%3D%22us-central1-a%22%0Aresource.labels.cluster_name%3D%22jetstream%22%0Aresource.labels.namespace_name%3D%22default%22%0Alabels.k8s-pod%2Fapp%3D%22jetstreamexport%22&scrollTimestamp=$cur_date"

          # wait for pod to finish and check status
          active_pods=`kubectl get pod -l app=jetstreamexport --output json | jq -j '.items | length'`
          failed_pods=0
          completed_pods=0

          while [ $active_pods -ge 0 -a $failed_pods == 0 -a $completed_pods == 0 ]
          do
            echo "Wait for jetstream export to finish"
            failed_pods=`kubectl get pod -l app=jetstreamexport --field-selector=status.phase=Failed --output json | jq -j '.items | length'`
            completed_pods=`kubectl get pod -l app=jetstreamexport --field-selector=status.phase=Succeeded --output json | jq -j '.items | length'`
            sleep 20
          done

          # delete pod
          kubectl delete pod -l app=jetstreamexport

          if [ $failed_pods -ge 1 ]; then
            echo "Error when running jetstream export. Check the logs for more information."
            exit 1
          elif [ $completed_pods -ge 1 ]; then
            echo "Jetstream export successfully completed."
          else
            echo "Jetstream export completed in unknown status. Please check the logs."
            exit 1
          fi
workflows:
  build-and-deploy:
    jobs:
      - validate
      - rerun:
        filters:
            branches:
              only: main
