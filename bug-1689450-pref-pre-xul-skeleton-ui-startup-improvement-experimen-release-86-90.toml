# https://experimenter.services.mozilla.com/experiments/pre-xul-skeleton-ui-and-abouthome-startup-cache-startup-improvement-experiment/
# Targets existing users

[experiment]
segments = ["low_cpu", "better_cpu", "hdd", "ssd"]

[metrics]
weekly = ["num_enrollments", "tagged_uri_count"]
overall = ["num_enrollments", "tagged_uri_count"]

[metrics.num_enrollments]
select_expression = """
    COUNT(DISTINCT
        IF(
            event_method = "enroll"
                AND event_string_value = "bug-1689450-pref-pre-xul-skeleton-ui-startup-improvement-experimen-release-86-90",
            mozfun.map.get_key(event_map_values, "enrollmentId"),
            NULL
        )
    )"""
data_source = "normandy_events"
statistics = { empirical_cdf = {} }

[metrics.tagged_uri_count]
select_expression = """
    COALESCE(
        SUM(
            IF(
                mozfun.map.get_key(experiments, "bug-1689450-pref-pre-xul-skeleton-ui-startup-improvement-experimen-release-86-90") IS NOT NULL,
                scalar_parent_browser_engagement_total_uri_count,
                0
            )
        ),
        0
    )
"""
data_source = "main_summary"
statistics = { bootstrap_mean = {}, deciles = {} }

[segments.low_cpu]
select_expression = 'COALESCE(MAX(cpu_count) BETWEEN 1 AND 2, FALSE)'
data_source = "clients_last_seen"

[segments.better_cpu]
select_expression = 'NOT COALESCE(MAX(cpu_count) BETWEEN 1 AND 2, FALSE)'
data_source = "clients_last_seen"

[segments.hdd]
select_expression = "COALESCE(ANY_VALUE(hdd_type) = 'HDD', FALSE)"
data_source = "events"

[segments.ssd]
select_expression = "COALESCE(ANY_VALUE(hdd_type) = 'SSD', FALSE)"
data_source = "events"

[segments.data_sources.events]
from_expression = """
    (SELECT
        DATE(submission_timestamp) AS submission_date,
        client_id,
        environment.system.hdd.profile.type AS hdd_type,
    FROM `moz-fx-data-shared-prod`.telemetry.event)
    """

